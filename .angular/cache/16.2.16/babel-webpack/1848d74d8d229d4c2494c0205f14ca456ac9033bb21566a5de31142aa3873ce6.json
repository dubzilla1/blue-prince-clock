{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport let GameClockComponent = /*#__PURE__*/(() => {\n  class GameClockComponent {\n    constructor() {\n      this.startHour = 8;\n      this.startMinute = 0;\n      this.speed = 8; // 8x real time\n      this.timerId = null;\n      this.startTimestamp = 0;\n      this.elapsedMs = 0;\n      this.running = false;\n      this.timeString = '';\n      this.setTime(this.startHour, this.startMinute, 0);\n    }\n    setTime(hour, minute, second) {\n      this.timeString = `${hour.toString().padStart(2, '0')}:${minute.toString().padStart(2, '0')}:${second.toString().padStart(2, '0')}`;\n    }\n    getCurrentGameTime() {\n      const totalMs = this.elapsedMs;\n      const totalSeconds = Math.floor(totalMs / 1000) * this.speed;\n      const totalMinutes = Math.floor(totalSeconds / 60);\n      const hour = (this.startHour + Math.floor(totalMinutes / 60)) % 24;\n      const minute = (this.startMinute + totalMinutes % 60) % 60;\n      const second = totalSeconds % 60;\n      return {\n        hour,\n        minute,\n        second\n      };\n    }\n    updateClock() {\n      if (this.running) {\n        const now = Date.now();\n        this.elapsedMs += now - this.startTimestamp;\n        this.startTimestamp = now;\n        const {\n          hour,\n          minute,\n          second\n        } = this.getCurrentGameTime();\n        this.setTime(hour, minute, second);\n      }\n    }\n    start() {\n      if (!this.running) {\n        this.running = true;\n        this.startTimestamp = Date.now();\n        this.timerId = setInterval(() => this.updateClock(), 1000);\n      }\n    }\n    stop() {\n      if (this.running) {\n        this.running = false;\n        clearInterval(this.timerId);\n        this.timerId = null;\n      }\n    }\n    reset() {\n      this.stop();\n      this.elapsedMs = 0;\n      this.setTime(this.startHour, this.startMinute, 0);\n    }\n    static {\n      this.ɵfac = function GameClockComponent_Factory(t) {\n        return new (t || GameClockComponent)();\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: GameClockComponent,\n        selectors: [[\"app-game-clock\"]],\n        decls: 12,\n        vars: 3,\n        consts: [[1, \"game-clock\"], [1, \"clock-display\"], [1, \"controls\"], [3, \"disabled\", \"click\"], [3, \"click\"]],\n        template: function GameClockComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n            i0.ɵɵtext(2, \"Blue Prince Game Clock\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(3, \"div\", 1);\n            i0.ɵɵtext(4);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(5, \"div\", 2)(6, \"button\", 3);\n            i0.ɵɵlistener(\"click\", function GameClockComponent_Template_button_click_6_listener() {\n              return ctx.start();\n            });\n            i0.ɵɵtext(7, \"Start\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(8, \"button\", 3);\n            i0.ɵɵlistener(\"click\", function GameClockComponent_Template_button_click_8_listener() {\n              return ctx.stop();\n            });\n            i0.ɵɵtext(9, \"Stop\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(10, \"button\", 4);\n            i0.ɵɵlistener(\"click\", function GameClockComponent_Template_button_click_10_listener() {\n              return ctx.reset();\n            });\n            i0.ɵɵtext(11, \"Reset\");\n            i0.ɵɵelementEnd()()();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(4);\n            i0.ɵɵtextInterpolate(ctx.timeString);\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"disabled\", ctx.running);\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"disabled\", !ctx.running);\n          }\n        },\n        styles: [\".game-clock[_ngcontent-%COMP%]{text-align:center;margin:2em auto}.clock-display[_ngcontent-%COMP%]{font-size:2em;margin:1em 0}.controls[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{margin:0 .5em}\"]\n      });\n    }\n  }\n  return GameClockComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}